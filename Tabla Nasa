<?php
/**
* Plugin Name: Mostrar Tablas de Usuarios y Planetas
* Plugin URI: https://github.com/AndresMaitaMedina/pluginsWP
* Description: Muestra tablas de usuarios desde la API JSONPlaceholder y datos sobre planetas desde la API de la NASA en WordPress.
* Version: 1.0.0
* Author: Andres
* Author URI: https://github.com/AndresMaitaMedina/pluginsWP
* License: GPL2
*/

// Agrega un shortcode llamado "mostrar_tabla_usuarios".
add_shortcode( 'mostrar_tabla_usuarios', 'mostrar_tabla_usuarios_func' );

// Agrega un shortcode llamado "mostrar_info_planetas".
add_shortcode( 'mostrar_info_planetas', 'mostrar_info_planetas_func' );

// Función que se ejecutará cuando se llame al shortcode "mostrar_tabla_usuarios".
function mostrar_tabla_usuarios_func() {
// URL de la API JSONPlaceholder para obtener datos de usuarios.
$api_url = 'https://jsonplaceholder.typicode.com/users';

// Realiza una solicitud GET a la API JSONPlaceholder.
$response = wp_remote_get( $api_url );

// Verifica si la solicitud fue exitosa.
if ( ! is_wp_error( $response ) && wp_remote_retrieve_response_code( $response ) === 200 ) {
// Convierte la respuesta JSON a un array asociativo.
$data = json_decode( wp_remote_retrieve_body( $response ), true );

// Construye la tabla con los datos de usuarios.
$table_html = '<style>
    table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }
    th, td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: left;
    }
    th {
        background-color: #33AFFF;
    }
</style>';

$table_html .= '<table>';
    $table_html .= '<thead><tr><th>ID</th><th>Nombre</th><th>Email</th><th>Empresa</th><th>Eslogan</th><th>Telefono</th><th>Ciudad</th><th>Codigo postal</th></tr></thead>';
    foreach ( $data as $user ) {
    $table_html .= '<tr>';
        $table_html .= '<td>' . esc_html( $user['id'] ) . '</td>';
        $table_html .= '<td>' . esc_html( $user['name'] ) . '</td>';
        $table_html .= '<td>' . esc_html( $user['email'] ) . '</td>';
        $table_html .= '<td>' . esc_html( $user['company']['name'] ) . '</td>';
        $table_html .= '<td>' . esc_html( $user['company']['catchPhrase'] ) . '</td>';
        $table_html .= '<td>' . esc_html( $user['phone']) . '</td>';
        $table_html .= '<td>' . esc_html( $user['address']['city']) . '</td>';
        $table_html .= '<td>' . esc_html( $user['address']['zipcode']) . '</td>';
        $table_html .= '</tr>';
    }
    $table_html .= '</table>';

return $table_html;
} else {
// Maneja el caso en que la solicitud no fue exitosa.
return 'Error al consultar la API JSONPlaceholder.';
}
}

// Función que se ejecutará cuando se llame al shortcode "mostrar_info_planetas".
// Función que se ejecutará cuando se llame al shortcode "mostrar_info_planetas".
function mostrar_info_planetas_func() {
    // URL de la API de la NASA para obtener datos sobre el sistema solar.
    $api_url = 'https://api.le-systeme-solaire.net/rest/bodies/';

    // Realiza una solicitud GET a la API de la NASA.
    $response = wp_remote_get($api_url);

    // Verifica si la solicitud fue exitosa.
    if (!is_wp_error($response) && wp_remote_retrieve_response_code($response) === 200) {
        // Convierte la respuesta JSON a un array asociativo.
        $data = json_decode(wp_remote_retrieve_body($response), true);

        // Verifica si hay datos antes de construir la tabla.
        if (!empty($data) && isset($data['bodies']) && is_array($data['bodies'])) {
            // Construye la tabla con los datos de planetas.
            $table_html = '<style>
                table {
                    width: 100%;
                    border-collapse: collapse;
                    margin-bottom: 20px;
                }
                th, td {
                    border: 1px solid #ddd;
                    padding: 8px;
                    text-align: left;
                }
                th {
                    background-color: #f2f2f2;
                }
                .planet-section {
                    display: none;
                }
                .show-section-btn {
                    cursor: pointer;
                    color: blue;
                    text-decoration: underline;
                }
            </style>';

            $table_html .= '<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>';

            $table_html .= '<table>';
            $table_html .= '<thead><tr><th>Nombre</th><th>Diámetro (km)</th><th>Masa (kg)</th><th>Imagen</th></tr></thead>';
            $i = 0; // Contador para controlar las columnas a mostrar.
            foreach ($data['bodies'] as $body) {
                $table_html .= '<tr class="planet-section" data-column="' . esc_attr($i) . '">';
                $table_html .= '<td>' . esc_html($body['englishName']) . '</td>';
                $table_html .= '<td>' . esc_html($body['meanRadius'] * 2) . '</td>';
                $table_html .= '<td>' . esc_html($body['mass']['massValue']) . ' ' . esc_html($body['mass']['massExponent']) . '</td>';
                $table_html .= '<td><img src="' . esc_url($body['moons'][0]['image']) . '" alt="' . esc_attr($body['englishName']) . '" style="max-width: 100px;"></td>';
                $table_html .= '</tr>';
                $i++;
            }
            $table_html .= '</table>';

            // Añadir botones numerados para mostrar secciones de la tabla.
            $table_html .= '<div>';
            for ($btn_num = 1; $btn_num <= ceil($i / 10); $btn_num++) {
                $table_html .= '<button class="show-section-btn" data-page="' . esc_attr($btn_num) . '">' . esc_html($btn_num) . '</button>';
            }
            $table_html .= '</div>';

            $table_html .= '<script>
                jQuery(document).ready(function($) {
                    $(".show-section-btn").on("click", function() {
                        var page = $(this).data("page");
                        var start = (page - 1) * 10;
                        var end = start + 10;
                        $(".planet-section").hide().filter("[data-column]:lt(" + end + "):gt(" + (start - 1) + ")").show();
                    });
                });
            </script>';

            return $table_html;
        } else {
            return 'No hay datos de planetas disponibles.';
        }
    } else {
        // Maneja el caso en que la solicitud no fue exitosa.
        return 'Error al consultar la API de la NASA.';
    }
}
